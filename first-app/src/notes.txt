ctrl+c остановить npm
props(свойства) - входные данные из входны
state(состояние) - создаются в компоненте и полностью зависит от компонента
//!rcc классовые компоненты
//! rfc функциональный компонент
//!rafc- функциональный компонент стрелочной функции

//TODO - state
значение в state можно изменять

//!rcons- конструктор

//!this.handleChange=this.handleChange.bind(this);//привязать метод по умолчанию

//TODO - формы

формы удобно обрабатывать с помощью js функций у которых есть доступ к введенным данным
Называется это- управляемыми компонентами
в react состояние обычно содержится в свойстве компонентов state и обновляется только при вызове setstate
Сделано чтобы react компонент мог рендерить форму и контролировать ее поведение на пользовательский ввод


 event.preventDefault() - обработчик отправки, без перезагрузки страницы
 map - выводит массив

items: [...this.state.items, this.state.input]//спред оператор es6, добавляет значение состояния input в массив items

//!Уроки React Js - CSS стилизация. Как подключить библиотеку Material Ui, Bootstrap
https://material-ui.com/ru/getting-started/installation/ 
для подключения стилей
https://www.youtube.com/watch?v=lQTJsP8o6S0&list=PLVfMKQXDAhGV90yI1FzsciwEi-11ILfAG&index=5 урок 6, обучение работы с material UI
подключаем файлы и api в конце файла material ui


//TODO жизненный цикл компонента
//!инициализация - фаза на которой компонент начинает свой путь(конструктор)
//!монтаж - фаза на которой на которой компонент монтируется в DOM, здесь появляются доступные методы
//!обновления - место, где состояние компонента изменяется и происходит повторный рендеринг, здесь state и props обновятся в ответ на
пользовательские события(клик, ввод)
//! размонтирование - метод перед удалением

//TODO передача данных между компонентами реакт